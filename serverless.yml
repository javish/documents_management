service: documents-management

custom:
  secrets: ${file(secrets.json)}
  stage: ${opt:stage, self:provider.stage}
  documentTableName: 'document-${self:provider.stage}'
  userTableName: 'user-${self:provider.stage}'
  dynamodb:
    start:
      port: 8000
      dbPath: /Users/javish/Documents/workspace/documents_management/projectData/
      migrate: true  
  
provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-west-2
  environment:
    JWT_SECRET: ${self:custom.secrets.JWT_SECRET}
    DOCUMENT_TABLE: ${self:custom.documentTableName}
    USER_TABLE: ${self:custom.userTableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - { "Fn::GetAtt": ["${self:provider.environment.DOCUMENT_TABLE}", "Arn"] }
        - { "Fn::GetAtt": ["${self:provider.environment.USER_TABLE}", "Arn"] }

functions:
  - '${file(resources/functions.serverless.yml)}'

resources:
  # DynamoDB
  - ${file(resources/dynamodb.serverless.yml)}

plugins:
  - serverless-dynamodb-local
  - serverless-offline # needs to be last in the list